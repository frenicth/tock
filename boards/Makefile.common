# Remove built-in rules and variables
# n.b. no-op for make --version < 4.0
MAKEFLAGS += -r
MAKEFLAGS += -R

export RUSTUP_TOOLCHAIN ?= nightly-2017-05-24

TOOLCHAIN ?= arm-none-eabi

XARGO ?= xargo
# This will hopefully move into Cargo.toml (or Cargo.toml.local) eventually
RUSTFLAGS_FOR_XARGO_LINKING := "-C link-arg=-nostartfiles -C link-arg=-Tlayout.ld"

SIZE      ?= $(TOOLCHAIN)-size
OBJCOPY   ?= $(TOOLCHAIN)-objcopy
OBJDUMP   ?= $(TOOLCHAIN)-objdump
OBJDUMP_FLAGS += --disassemble-all --source --disassembler-options=force-thumb -C --section-headers

ifndef PLATFORM
$(error Required make vairable PLATFORM is not defined)
endif

# If environment variable V is non-empty, be verbose
ifneq ($(V),)
Q=
VERBOSE = --verbose
else
Q=@
VERBOSE =
endif

export TOCK_KERNEL_VERSION := $(shell git describe --always || echo notgit)

# Check that rustc is the right nightly - warn not error if wrong, sometimes useful to test others
RUSTC_VERSION_STRING := rustc 1.19.0-nightly (5b13bff52 2017-05-23)
ifneq ($(shell RUSTUP_TOOLCHAIN=$(RUSTUP_TOOLCHAIN) rustc --version), $(RUSTC_VERSION_STRING))
  DUMMY := $(shell rustup install $(RUSTUP_TOOLCHAIN))
  ifneq ($(shell RUSTUP_TOOLCHAIN=$(RUSTUP_TOOLCHAIN) rustc --version), $(RUSTC_VERSION_STRING))
    $(warning You do not have the correct version of `rustc` configured, and `rustup` is not installed.)
    $(warning Expected `rustc` version "$(RUSTC_VERSION_STRING)" but got "$(shell rustc --version)")
    $(warning You may experience unexpected compilation warnings or errors)
    $(warning To fix, install `rustup` from https://rustup.rs/, then run: `rustup install $(RUSTUP_TOOLCHAIN)`)
  endif
endif

# Check that xargo is installed
ifneq ($(strip $(firstword $(shell $(XARGO) --version 2>&1))), xargo)
  $(warning Required tool `xargo` not installed.)
  $(warning Running `cargo install xargo` in 3 seconds (ctrl-c to cancel))
  $(shell sleep 3s)
  $(shell cargo install xargo)
endif

# Dump configuration for verbose builds
ifneq ($(V),)
  $(info )
  $(info **************************************************)
  $(info TOCK KERNEL BUILD SYSTEM -- VERBOSE BUILD)
  $(info **************************************************)
  $(info Config:)
  $(info CHIP=$(CHIP))
  $(info MAKEFLAGS=$(MAKEFLAGS))
  $(info OBJCOPY=$(OBJCOPY))
  $(info PLATFORM=$(PLATFORM))
  $(info RUSTUP_TOOLCHAIN=$(RUSTUP_TOOLCHAIN))
  $(info TARGET=$(TARGET))
  $(info TOCK_KERNEL_VERSION=$(TOCK_KERNEL_VERSION))
  $(info TOOLCHAIN=$(TOOLCHAIN))
  $(info )
  $(info $(OBJCOPY) --version = $(shell $(OBJCOPY) --version))
  $(info rustc --version = $(shell rustc --version))
  $(info **************************************************)
  $(info )
endif

.PHONY: all
all:	target/$(TARGET)/release/$(PLATFORM).bin

.PHONY: debug
debug:	target/$(TARGET)/debug/$(PLATFORM).bin

.PHONY: doc
doc:
	$(Q)XARGO doc $(VERBOSE) --release --target=$(TARGET)

target/$(TARGET)/release/$(PLATFORM).elf: target/$(TARGET)/release/$(PLATFORM)
	$(Q)cp target/$(TARGET)/release/$(PLATFORM) target/$(TARGET)/release/$(PLATFORM).elf

.PHONY: target/$(TARGET)/release/$(PLATFORM)
target/$(TARGET)/release/$(PLATFORM):
	$(Q)rustup component add rust-src
	$(Q)RUSTFLAGS=$(RUSTFLAGS_FOR_XARGO_LINKING) $(XARGO) build --target=$(TARGET) $(VERBOSE) --release
	$(Q)$(SIZE) $@

target/$(TARGET)/debug/$(PLATFORM).elf: target/$(TARGET)/debug/$(PLATFORM)
	$(Q)cp target/$(TARGET)/debug/$(PLATFORM) target/$(TARGET)/debug/$(PLATFORM).elf

.PHONY: target/$(TARGET)/debug/$(PLATFORM)
target/$(TARGET)/debug/$(PLATFORM):
	$(Q)RUSTFLAGS=$(RUSTFLAGS_FOR_XARGO_LINKING) $(XARGO) build $(VERBOSE) --target=$(TARGET)
	$(Q)$(OBJDUMP) $(OBJDUMP_FLAGS) $@ > target/$(TARGET)/debug/$(PLATFORM).lst
	$(Q)$(SIZE) $@

target/$(TARGET)/release/$(PLATFORM).hex: target/$(TARGET)/release/$(PLATFORM).elf
	$(Q)$(OBJCOPY) -Oihex $^ $@

target/$(TARGET)/debug/$(PLATFORM).hex: target/$(TARGET)/debug/$(PLATFORM).elf
	$(Q)$(OBJCOPY) -Oihex $^ $@

target/$(TARGET)/release/$(PLATFORM).bin: target/$(TARGET)/release/$(PLATFORM).elf
	$(Q)$(OBJCOPY) -Obinary $^ $@

target/$(TARGET)/debug/$(PLATFORM).bin: target/$(TARGET)/debug/$(PLATFORM).elf
	$(Q)$(OBJCOPY) -Obinary $^ $@

.PHONY: clean
clean::
	$(Q)$(XARGO) clean $(VERBOSE)

.PHONY: debug
debug: target/$(TARGET)/debug/$(PLATFORM).elf
